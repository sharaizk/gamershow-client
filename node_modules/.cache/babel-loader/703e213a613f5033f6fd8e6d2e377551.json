{"ast":null,"code":"var _jsxFileName = \"D:\\\\STREAMING_SITE\\\\client\\\\src\\\\component\\\\streams\\\\StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream, sucSnack } from '../../actions';\nimport StreamForm from './StreamForm';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      this.props.editStream(this.props.match.params.id, formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createStream\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          id: \"createLabel\",\n          children: \"Edit Stream\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(StreamForm, {\n          onSubmit: this.onSubmit,\n          initialValues: _.pick(this.props.stream, 'title', 'description')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.stream[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["D:/STREAMING_SITE/client/src/component/streams/StreamEdit.js"],"names":["React","connect","fetchStream","editStream","sucSnack","StreamForm","_","StreamEdit","Component","onSubmit","formValues","props","match","params","id","componentDidMount","render","pick","stream","mapStateToProps","state","ownProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,EAAqBC,UAArB,EAAgCC,QAAhC,QAA+C,eAA/C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;;;AACA,MAAMC,UAAN,SAAyBP,KAAK,CAACQ,SAA/B,CAAwC;AAAA;AAAA;;AAAA,SAIpCC,QAJoC,GAI1BC,UAAD,IAAc;AACnB,WAAKC,KAAL,CAAWR,UAAX,CAAsB,KAAKQ,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,EAAkDJ,UAAlD;AAEH,KAPmC;AAAA;;AACpCK,EAAAA,iBAAiB,GAAE;AACf,SAAKJ,KAAL,CAAWT,WAAX,CAAuB,KAAKS,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAKDE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACA;AAAI,UAAA,EAAE,EAAC,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,UAAD;AAAY,UAAA,QAAQ,EAAE,KAAKP,QAA3B;AAAqC,UAAA,aAAa,EAAEH,CAAC,CAACW,IAAF,CAAO,KAAKN,KAAL,CAAWO,MAAlB,EAA0B,OAA1B,EAAkC,aAAlC;AAApD;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AAtBmC;;AAyBxC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAoB;AACxC,SAAM;AACFH,IAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,CAAaG,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAAnC;AADN,GAAN;AAGH,CAJD;;AAMA,eAAgBb,OAAO,CAACkB,eAAD,EAAkB;AAACjB,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CAAoDI,UAApD,CAAhB","sourcesContent":["import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {fetchStream, editStream,sucSnack} from '../../actions'\r\nimport StreamForm from './StreamForm'\r\nimport _ from 'lodash'\r\nclass StreamEdit extends React.Component{\r\n    componentDidMount(){\r\n        this.props.fetchStream(this.props.match.params.id)\r\n    }\r\n    onSubmit=(formValues)=>{\r\n        this.props.editStream(this.props.match.params.id, formValues)\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"createStream\">\r\n                <div className=\"createForm\">\r\n                <h4 id=\"createLabel\">Edit Stream</h4>\r\n                <StreamForm onSubmit={this.onSubmit} initialValues={_.pick(this.props.stream, 'title','description')}/>\r\n                {/* <Snackbar open={this.props.sucsnack}  onClose={this.handleClose}>\r\n                    <Alert onClose={this.handleClose} severity=\"success\">\r\n                        Stream Created\r\n                    </Alert>\r\n                </Snackbar> */}\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) =>{\r\n    return{\r\n        stream: state.stream[ownProps.match.params.id],\r\n    }\r\n}\r\n\r\nexport default  connect(mapStateToProps, {fetchStream, editStream})(StreamEdit)"]},"metadata":{},"sourceType":"module"}