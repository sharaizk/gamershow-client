{"ast":null,"code":"var _jsxFileName = \"D:\\\\STREAMING_SITE\\\\client\\\\src\\\\component\\\\streams\\\\StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams, sucSnack, chkToken } from '../../actions';\nimport Paper from '@material-ui/core/Paper';\nimport CircleLoader from \"react-spinners/CircleLoader\";\nimport { NavLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      load: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      load: true\n    });\n    this.props.fetchStreams();\n    setTimeout(() => {\n      this.setState({\n        load: false\n      });\n    }, 1500);\n    this.props.chkToken();\n  }\n\n  componentWillUnmount() {\n    clearTimeout(setTimeout(() => {\n      this.setState({\n        load: false\n      });\n    }, 1500));\n  }\n\n  componentDidUpdate() {\n    if (this.props.sucsnack) {\n      this.props.sucSnack(false);\n    }\n  } // if user is same then show buttons\n\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"adminBtns\",\n        children: [/*#__PURE__*/_jsxDEV(NavLink, {\n          to: `/streams/edit/${stream._id}`,\n          id: \"edit\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          exact: true,\n          to: `/streams/delete/${stream._id}`,\n          id: \"del\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  renderList() {\n    return this.props.stream.map(streams => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"paperList\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: '0px 25px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"streamDesc\",\n              children: [/*#__PURE__*/_jsxDEV(NavLink, {\n                to: `/streams/${streams._id}`,\n                id: \"streamTitle\",\n                children: streams.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 25\n              }, this), streams.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this), this.renderAdmin(streams)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, streams._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  render() {\n    if (this.state.load) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Loader\",\n        children: /*#__PURE__*/_jsxDEV(CircleLoader, {\n          color: \"#66FCF1\",\n          loading: this.state.load,\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"renderList\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"labelHead\",\n          children: \"STREAMS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), this.renderList()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    stream: Object.values(state.stream),\n    currentUserId: state.pauth.userId,\n    sucsnack: state.sucsnack\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams,\n  sucSnack,\n  chkToken\n})(StreamList);","map":{"version":3,"sources":["D:/STREAMING_SITE/client/src/component/streams/StreamList.js"],"names":["React","connect","fetchStreams","sucSnack","chkToken","Paper","CircleLoader","NavLink","StreamList","Component","state","load","componentDidMount","setState","props","setTimeout","componentWillUnmount","clearTimeout","componentDidUpdate","sucsnack","renderAdmin","stream","userId","currentUserId","_id","renderList","map","streams","margin","title","description","render","mapStateToProps","Object","values","pauth"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {fetchStreams, sucSnack, chkToken} from '../../actions'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CircleLoader from \"react-spinners/CircleLoader\";\r\nimport { NavLink} from 'react-router-dom'\r\n\r\nclass StreamList extends React.Component {\r\n    state={\r\n        load: null\r\n    }\r\n    componentDidMount(){\r\n        this.setState({load:true})\r\n        this.props.fetchStreams()\r\n        setTimeout(()=>{\r\n            this.setState({load:false})\r\n        },1500)\r\n        this.props.chkToken()\r\n    }\r\n    componentWillUnmount(){\r\n       clearTimeout(setTimeout(()=>{\r\n        this.setState({load:false})\r\n    },1500))\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if(this.props.sucsnack){\r\n            this.props.sucSnack(false)\r\n        }\r\n    }\r\n\r\n    // if user is same then show buttons\r\n    renderAdmin(stream){\r\n        if(stream.userId === this.props.currentUserId){\r\n            return (\r\n                <div id=\"adminBtns\">\r\n                    <NavLink to={`/streams/edit/${stream._id}`} id=\"edit\">Edit</NavLink>\r\n                    <NavLink exact to={`/streams/delete/${stream._id}`} id=\"del\">Delete</NavLink>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderList(){\r\n        return this.props.stream.map(streams =>{\r\n            return(\r\n                <React.Fragment key={streams._id}>\r\n                <Paper elevation={0} />\r\n                <Paper\r\n                className=\"paperList\"\r\n                >\r\n                    <div style={{margin: '0px 25px'}}>\r\n                        <div className=\"streamDesc\">\r\n                        <NavLink to={`/streams/${streams._id}`} id=\"streamTitle\">\r\n                        {streams.title}\r\n                        </NavLink>\r\n                        <br/>\r\n                        {streams.description}\r\n                        </div>\r\n                        {this.renderAdmin(streams)}\r\n                    </div>\r\n                </Paper>\r\n                <Paper elevation={3} />\r\n                </React.Fragment>\r\n            )\r\n        })\r\n    }\r\n    render(){\r\n        if(this.state.load){\r\n            return(\r\n                <div className=\"Loader\">\r\n                <CircleLoader color={\"#66FCF1\"} loading={this.state.load} size={50} />\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"renderList\">\r\n                    <h4 className=\"labelHead\">STREAMS</h4>\r\n                    {this.renderList()}\r\n                </div>\r\n                )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n        stream: Object.values(state.stream),\r\n        currentUserId: state.pauth.userId,\r\n        sucsnack: state.sucsnack\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {fetchStreams,sucSnack,chkToken})(StreamList)"]},"metadata":{},"sourceType":"module"}