{"ast":null,"code":"var _jsxFileName = \"D:\\\\STREAMING_SITE\\\\client\\\\src\\\\component\\\\streams\\\\StreamShow.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamShow extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 20\n      }, this);\n    }\n\n    const {\n      title,\n      description\n    } = this.props.stream;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.stream[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["D:/STREAMING_SITE/client/src/component/streams/StreamShow.js"],"names":["React","connect","fetchStream","StreamShow","Component","componentDidMount","props","match","params","id","render","stream","title","description","mapStateToProps","state","ownProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,eAA1B;;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAwC;AACpCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AACDC,EAAAA,MAAM,GAAE;AACJ,QAAG,CAAC,KAAKJ,KAAL,CAAWK,MAAf,EAAsB;AAClB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,UAAM;AAACC,MAAAA,KAAD;AAAOC,MAAAA;AAAP,QAAsB,KAAKP,KAAL,CAAWK,MAAvC;AAEA,wBACI;AAAA,8BACI;AAAA,kBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAjBmC;;AAoBxC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAOC,QAAP,KAAmB;AACvC,SAAM;AACFL,IAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAaK,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAAnC;AADN,GAAN;AAGH,CAJD;;AAMA,eAAeR,OAAO,CAACa,eAAD,EAAkB;AAACZ,EAAAA;AAAD,CAAlB,CAAP,CAAwCC,UAAxC,CAAf","sourcesContent":["import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {fetchStream} from '../../actions'\r\n\r\nclass StreamShow extends React.Component{\r\n    componentDidMount(){\r\n        this.props.fetchStream(this.props.match.params.id)\r\n    }\r\n    render(){\r\n        if(!this.props.stream){\r\n            return <div>Loading</div>\r\n        }\r\n\r\n        const {title,description} = this.props.stream\r\n\r\n        return(\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <h5>{description}</h5>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) =>{\r\n    return{\r\n        stream: state.stream[ownProps.match.params.id]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchStream})(StreamShow)"]},"metadata":{},"sourceType":"module"}