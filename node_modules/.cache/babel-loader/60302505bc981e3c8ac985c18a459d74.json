{"ast":null,"code":"var _jsxFileName = \"D:\\\\STREAMING_SITE\\\\client\\\\src\\\\component\\\\streams\\\\StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\nimport Paper from '@material-ui/core/Paper';\nimport CircleLoader from \"react-spinners/CircleLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      load: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      load: true\n    });\n    this.props.fetchStreams();\n    setTimeout(() => {\n      this.setState({\n        load: false\n      });\n    }, 1500);\n  } // if user is same then show buttons\n\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"adminBtns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"edit\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"del\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  renderList() {\n    return this.props.stream.map(streams => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"paperList\",\n          style: {\n            backgroundColor: '#202833',\n            color: 'white'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: '0px 25px'\n            },\n            children: [streams.title, this.renderAdmin(streams)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  render() {\n    if (this.state.load) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Loader\",\n        children: /*#__PURE__*/_jsxDEV(CircleLoader, {\n          color: \"#66FCF1\",\n          loading: this.state.load,\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"renderList\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"labelHead\",\n          children: \"STREAMS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), this.renderList()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    stream: Object.values(state.stream),\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["D:/STREAMING_SITE/client/src/component/streams/StreamList.js"],"names":["React","connect","fetchStreams","Paper","CircleLoader","StreamList","Component","state","load","componentDidMount","setState","props","setTimeout","renderAdmin","stream","userId","currentUserId","renderList","map","streams","backgroundColor","color","margin","title","render","mapStateToProps","Object","values","auth"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {fetchStreams} from '../../actions'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CircleLoader from \"react-spinners/CircleLoader\";\r\n\r\nclass StreamList extends React.Component {\r\n    state={\r\n        load: null\r\n    }\r\n    componentDidMount(){\r\n        this.setState({load:true})\r\n        this.props.fetchStreams()\r\n        setTimeout(()=>{\r\n            this.setState({load:false})\r\n        },1500)\r\n    }\r\n\r\n    // if user is same then show buttons\r\n    renderAdmin(stream){\r\n        if(stream.userId === this.props.currentUserId){\r\n            return (\r\n                <div id=\"adminBtns\">\r\n                    <button id=\"edit\">Edit</button>\r\n                    <button id=\"del\">Delete</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderList(){\r\n        return this.props.stream.map(streams =>{\r\n            return(\r\n                <div >\r\n                <Paper elevation={0} />\r\n                <Paper\r\n\r\n                className=\"paperList\"\r\n                style={{backgroundColor: '#202833', \r\n                color:'white'}}\r\n                >\r\n                    <div style={{margin: '0px 25px'}}>\r\n                        {streams.title}\r\n                        {this.renderAdmin(streams)}\r\n                    </div>\r\n                </Paper>\r\n                <Paper elevation={3} />\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n    render(){\r\n        if(this.state.load){\r\n            return(\r\n                <div className=\"Loader\">\r\n                <CircleLoader color={\"#66FCF1\"} loading={this.state.load} size={50} />\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"renderList\">\r\n                    <h4 className=\"labelHead\">STREAMS</h4>\r\n                    {this.renderList()}\r\n                </div>\r\n                )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n        stream: Object.values(state.stream),\r\n        currentUserId: state.auth.userId\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {fetchStreams})(StreamList)"]},"metadata":{},"sourceType":"module"}