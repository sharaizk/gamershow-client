{"ast":null,"code":"var _jsxFileName = \"D:\\\\STREAMING_SITE\\\\client\\\\src\\\\component\\\\streams\\\\StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream, sucSnack } from '../../actions';\nimport StreamForm from './StreamForm';\nimport _ from 'lodash'; // SNACKBAR\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Alert;\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClose = async (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      this.setState({\n        open: false\n      });\n      await this.props.sucSnack(false);\n      history.push('/');\n    };\n\n    this.onSubmit = formValues => {\n      this.props.editStream(this.props.match.params.id, formValues);\n      this.props.sucSnack(true);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createStream\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          id: \"createLabel\",\n          children: \"Edit Stream\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(StreamForm, {\n          onSubmit: this.onSubmit,\n          initialValues: _.pick(this.props.stream, 'title', 'description')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n          open: this.props.sucsnack,\n          onClose: this.handleClose,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            onClose: this.handleClose,\n            severity: \"success\",\n            children: \"Stream edited succesfully\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.stream[ownProps.match.params.id],\n    sucsnack: state.sucsnack\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream,\n  sucSnack\n})(StreamEdit);\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["D:/STREAMING_SITE/client/src/component/streams/StreamEdit.js"],"names":["React","connect","fetchStream","editStream","sucSnack","StreamForm","_","Snackbar","MuiAlert","Alert","props","StreamEdit","Component","handleClose","event","reason","setState","open","history","push","onSubmit","formValues","match","params","id","componentDidMount","render","pick","stream","sucsnack","mapStateToProps","state","ownProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,EAAqBC,UAArB,EAAgCC,QAAhC,QAA+C,eAA/C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,CAAP,MAAc,QAAd,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,sBAAO,QAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC,QAAhC;AAAA,OAA6CA;AAA7C;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;KAFQD,K;;AAKT,MAAME,UAAN,SAAyBX,KAAK,CAACY,SAA/B,CAAwC;AAAA;AAAA;;AAAA,SAKpCC,WALoC,GAKtB,OAAMC,KAAN,EAAaC,MAAb,KAAwB;AAClC,UAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AACD,WAAKC,QAAL,CAAc;AACVC,QAAAA,IAAI,EAAC;AADK,OAAd;AAGA,YAAM,KAAKP,KAAL,CAAWN,QAAX,CAAoB,KAApB,CAAN;AACAc,MAAAA,OAAO,CAACC,IAAR,CAAa,GAAb;AACH,KAdmC;;AAAA,SAgBpCC,QAhBoC,GAgB1BC,UAAD,IAAc;AACnB,WAAKX,KAAL,CAAWP,UAAX,CAAsB,KAAKO,KAAL,CAAWY,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,EAAkDH,UAAlD;AACA,WAAKX,KAAL,CAAWN,QAAX,CAAoB,IAApB;AACH,KAnBmC;AAAA;;AAEpCqB,EAAAA,iBAAiB,GAAE;AACf,SAAKf,KAAL,CAAWR,WAAX,CAAuB,KAAKQ,KAAL,CAAWY,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAkBDE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACA;AAAI,UAAA,EAAE,EAAC,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,UAAD;AAAY,UAAA,QAAQ,EAAE,KAAKN,QAA3B;AAAqC,UAAA,aAAa,EAAEd,CAAC,CAACqB,IAAF,CAAO,KAAKjB,KAAL,CAAWkB,MAAlB,EAA0B,OAA1B,EAAkC,aAAlC;AAApD;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA,QAAC,QAAD;AAAU,UAAA,IAAI,EAAE,KAAKlB,KAAL,CAAWmB,QAA3B;AAAsC,UAAA,OAAO,EAAE,KAAKhB,WAApD;AAAA,iCACI,QAAC,KAAD;AAAO,YAAA,OAAO,EAAE,KAAKA,WAArB;AAAkC,YAAA,QAAQ,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AApCmC;;AAuCxC,MAAMiB,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAoB;AACxC,SAAM;AACFJ,IAAAA,MAAM,EAAEG,KAAK,CAACH,MAAN,CAAaI,QAAQ,CAACV,KAAT,CAAeC,MAAf,CAAsBC,EAAnC,CADN;AAEFK,IAAAA,QAAQ,EAAEE,KAAK,CAACF;AAFd,GAAN;AAIH,CALD;;AAOA,eAAgB5B,OAAO,CAAC6B,eAAD,EAAkB;AAAC5B,EAAAA,WAAD;AAAcC,EAAAA,UAAd;AAA0BC,EAAAA;AAA1B,CAAlB,CAAP,CAA8DO,UAA9D,CAAhB","sourcesContent":["import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {fetchStream, editStream,sucSnack} from '../../actions'\r\nimport StreamForm from './StreamForm'\r\nimport _ from 'lodash'\r\n\r\n// SNACKBAR\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nclass StreamEdit extends React.Component{\r\n\r\n    componentDidMount(){\r\n        this.props.fetchStream(this.props.match.params.id)\r\n    }\r\n    handleClose = async(event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n        this.setState({\r\n            open:false\r\n        })\r\n        await this.props.sucSnack(false)\r\n        history.push('/')\r\n    };\r\n\r\n    onSubmit=(formValues)=>{\r\n        this.props.editStream(this.props.match.params.id, formValues)\r\n        this.props.sucSnack(true)\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"createStream\">\r\n                <div className=\"createForm\">\r\n                <h4 id=\"createLabel\">Edit Stream</h4>\r\n                <StreamForm onSubmit={this.onSubmit} initialValues={_.pick(this.props.stream, 'title','description')}/>\r\n                <Snackbar open={this.props.sucsnack}  onClose={this.handleClose}>\r\n                    <Alert onClose={this.handleClose} severity=\"success\">\r\n                        Stream edited succesfully\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) =>{\r\n    return{\r\n        stream: state.stream[ownProps.match.params.id],\r\n        sucsnack: state.sucsnack\r\n    }\r\n}\r\n\r\nexport default  connect(mapStateToProps, {fetchStream, editStream, sucSnack})(StreamEdit)"]},"metadata":{},"sourceType":"module"}