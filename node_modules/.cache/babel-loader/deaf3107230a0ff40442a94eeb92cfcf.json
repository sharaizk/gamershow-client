{"ast":null,"code":"import streams from '../api/streams';\nimport server from '../api/server';\nimport history from '../history';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM, SUC_SNACK, SIGN_UP, PSIGN_IN } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const signUp = (formValues, gender) => {\n  const {\n    name,\n    username,\n    email,\n    password\n  } = formValues;\n  return async dispatch => {\n    try {\n      const response = await server.post('/register', {\n        name,\n        username,\n        email,\n        password,\n        gender\n      });\n      console.log(response);\n      dispatch({\n        type: SIGN_UP,\n        payload: response.data.userId\n      });\n      history.push('/login');\n    } catch (e) {\n      alert(e.response.data.error);\n    }\n  };\n};\nexport const psignIn = formValues => {\n  const {\n    username,\n    password\n  } = formValues;\n  return async dispatch => {\n    try {\n      const response = await server.post('/login', {\n        username,\n        password\n      });\n      console.log(response.data._id);\n      dispatch({\n        type: PSIGN_IN,\n        payload: \"response\"\n      }); // history.push('/login')\n    } catch (e) {\n      alert(e.response.data.error);\n    }\n  };\n};\nexport const createStream = formValues => {\n  return async (dispatch, getState) => {\n    const {\n      userId\n    } = getState().auth;\n    const response = await streams.post('/streams', { ...formValues,\n      userId\n    });\n    dispatch({\n      type: CREATE_STREAM,\n      payload: response.data\n    });\n  };\n};\nexport const fetchStreams = () => {\n  return async dispatch => {\n    const response = await streams.get('/streams');\n    dispatch({\n      type: FETCH_STREAMS,\n      payload: response.data\n    });\n  };\n};\nexport const fetchStream = id => {\n  return async dispatch => {\n    const response = await streams.get(`/streams/${id}`);\n    dispatch({\n      type: FETCH_STREAM,\n      payload: response.data\n    });\n  };\n};\nexport const editStream = (id, formValues) => {\n  return async dispatch => {\n    const response = await streams.patch(`/streams/${id}`, formValues);\n    dispatch({\n      type: EDIT_STREAM,\n      payload: response.data\n    });\n  };\n};\nexport const deleteStream = id => {\n  return async dispatch => {\n    await streams.delete(`/streams/${id}`);\n    dispatch({\n      type: DELETE_STREAM,\n      payload: id\n    });\n    history.push('/');\n  };\n};\nexport const sucSnack = status => {\n  return {\n    type: SUC_SNACK,\n    payload: status\n  };\n};","map":{"version":3,"sources":["D:/STREAMING_SITE/client/src/actions/index.js"],"names":["streams","server","history","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","SUC_SNACK","SIGN_UP","PSIGN_IN","signIn","userId","type","payload","signOut","signUp","formValues","gender","name","username","email","password","dispatch","response","post","console","log","data","push","e","alert","error","psignIn","_id","createStream","getState","auth","fetchStreams","get","fetchStream","id","editStream","patch","deleteStream","delete","sucSnack","status"],"mappings":"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","sourcesContent":["import streams from '../api/streams'\r\nimport server from '../api/server'\r\nimport history from '../history'\r\n\r\nimport {\r\n    SIGN_IN, \r\n    SIGN_OUT, \r\n    CREATE_STREAM,\r\n    FETCH_STREAMS,\r\n    FETCH_STREAM,\r\n    DELETE_STREAM,\r\n    EDIT_STREAM,\r\n    SUC_SNACK,\r\n    SIGN_UP,\r\n    PSIGN_IN\r\n} from './types'\r\n\r\nexport const signIn = (userId) =>{\r\n    return{\r\n        type: SIGN_IN,\r\n        payload:userId\r\n    }\r\n}\r\n\r\nexport const signOut = () =>{\r\n    return{\r\n        type: SIGN_OUT\r\n    }\r\n}\r\nexport const signUp=(formValues,gender)=>{\r\n    const{name, username,email,password}=formValues\r\n    return async(dispatch)=>{\r\n        try{\r\n            const response = await server.post('/register',{name, username,email,password,gender})\r\n            console.log(response)\r\n            dispatch({type: SIGN_UP, payload:response.data.userId})\r\n            history.push('/login')\r\n        }\r\n        catch(e){\r\n            alert(e.response.data.error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const psignIn = (formValues)=>{\r\n    const{username, password}=formValues\r\n    return async(dispatch)=>{\r\n        try{\r\n            const response = await server.post('/login',{username,password})\r\n            console.log(response.data._id)\r\n            dispatch({type: PSIGN_IN, payload:\"response\"})\r\n            // history.push('/login')\r\n        }\r\n        catch(e){\r\n            alert(e.response.data.error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const createStream = (formValues) =>{\r\n    return async (dispatch, getState) =>{\r\n        const {userId} = getState().auth\r\n        const response = await streams.post('/streams',{...formValues, userId})\r\n        dispatch({type: CREATE_STREAM, payload: response.data})\r\n    }\r\n}\r\n\r\nexport const fetchStreams = () =>{\r\n    return async (dispatch) =>{\r\n        const response = await streams.get('/streams')\r\n        dispatch({type:FETCH_STREAMS, payload: response.data})\r\n    }\r\n}\r\n\r\nexport const fetchStream = (id) =>{\r\n    return async(dispatch) =>{\r\n        const response = await streams.get(`/streams/${id}`)\r\n        dispatch({type: FETCH_STREAM, payload: response.data})\r\n    }\r\n}\r\n\r\nexport const editStream = (id, formValues) =>{\r\n    return async(dispatch)=>{\r\n        const response = await streams.patch(`/streams/${id}`, formValues)\r\n        dispatch({type:EDIT_STREAM, payload:response.data})\r\n    }\r\n}\r\n\r\nexport const deleteStream = (id)=>{\r\n    return async(dispatch)=>{\r\n        await streams.delete(`/streams/${id}`)\r\n        dispatch({type: DELETE_STREAM, payload: id})\r\n        history.push('/')\r\n    }\r\n}\r\n\r\nexport const sucSnack = (status) =>{\r\n    return{\r\n        type: SUC_SNACK,\r\n        payload: status\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}