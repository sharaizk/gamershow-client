{"ast":null,"code":"var _jsxFileName = \"D:\\\\STREAMING_SITE\\\\client\\\\src\\\\component\\\\Form\\\\LoginForm.js\";\nimport './form.css';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { psignIn } from '../../actions';\nimport GoogleAuth from \"../GoogleAuth\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Alert;\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gender: \"Male\",\n      error: false\n    };\n\n    this.handleClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      this.setState({\n        error: false\n      });\n    };\n\n    this.onSubmit = formValues => {\n      this.props.psignIn(formValues);\n    };\n  }\n\n  renderErrorBar(message) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: this.state.error,\n        onClose: this.handleClose,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: this.handleClose,\n          severity: \"error\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }, this)\n    }, void 0, false);\n  }\n\n  renderInput({\n    input,\n    label,\n    meta,\n    type\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"labFieldDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"formLabel\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"formField\",\n        required: true,\n        placeholder: label,\n        ...input,\n        type: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"formHeader\",\n          children: \"LogIn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"username\",\n          component: this.renderInput,\n          label: \"Full Name\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          component: this.renderInput,\n          label: \"Username\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          exact: true,\n          to: \"/register\",\n          className: \"linklogin\",\n          children: \"Don't have an account? Create One\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submitsignForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"userubmit_btn\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(GoogleAuth, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), this.renderErrorBar(\"Passwords Do not match\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst login = reduxForm({\n  form: 'loginForm'\n})(LoginForm);\nexport default connect(null, {\n  psignIn\n})(login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["D:/STREAMING_SITE/client/src/component/Form/LoginForm.js"],"names":["React","NavLink","Field","reduxForm","connect","psignIn","GoogleAuth","Snackbar","MuiAlert","Alert","props","LoginForm","Component","state","gender","error","handleClose","event","reason","setState","onSubmit","formValues","renderErrorBar","message","renderInput","input","label","meta","type","render","handleSubmit","login","form"],"mappings":"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","sourcesContent":["import './form.css'\r\nimport React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {connect} from 'react-redux'\r\nimport {psignIn} from '../../actions'\r\nimport GoogleAuth from \"../GoogleAuth\";\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nclass LoginForm extends React.Component{\r\n    \r\n    state={\r\n        gender: \"Male\",\r\n        error: false\r\n    }    \r\n    handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n        this.setState({\r\n            error:false\r\n        })\r\n    };\r\n\r\n    renderErrorBar(message){\r\n        return(\r\n            <>\r\n               <Snackbar open={this.state.error}  onClose={this.handleClose}>\r\n                <Alert onClose={this.handleClose} severity=\"error\">\r\n                    {message}\r\n                </Alert>\r\n                </Snackbar>\r\n            </>\r\n        )\r\n    }\r\n\r\n    renderInput({input, label, meta,type}){\r\n        return(\r\n            <div className=\"labFieldDiv\">\r\n                <label className=\"formLabel\">{label}</label>\r\n                <br />\r\n                <input className=\"formField\" required placeholder={label} {...input} type={type}/>\r\n            </div>\r\n        )\r\n    }\r\n    onSubmit =(formValues)=>{\r\n            this.props.psignIn(formValues)\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"formDiv\">\r\n                <form className=\"form\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                    <h3 className=\"formHeader\">LogIn</h3>\r\n                    <Field name=\"username\" component ={this.renderInput} label=\"Full Name\" type=\"text\"/>\r\n\r\n                    <Field name=\"password\" component ={this.renderInput} label=\"Username\" type=\"password\"/>\r\n\r\n                    <NavLink exact to=\"/register\" className=\"linklogin\">Don't have an account? Create One</NavLink>\r\n                    <div className=\"submitsignForm\">\r\n                    <button  className=\"userubmit_btn\">Login</button>\r\n                    <GoogleAuth />\r\n                    </div>\r\n                    {this.renderErrorBar(\"Passwords Do not match\")}\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\nconst login=reduxForm({\r\n    form: 'loginForm',\r\n})(LoginForm)\r\n\r\nexport default connect(null, {psignIn})(login)"]},"metadata":{},"sourceType":"module"}