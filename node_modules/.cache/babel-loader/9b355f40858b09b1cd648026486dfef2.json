{"ast":null,"code":"var _jsxFileName = \"D:\\\\STREAMING_SITE\\\\client\\\\src\\\\component\\\\streams\\\\StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\nimport Paper from '@material-ui/core/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  } // if user is same then show buttons\n\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"adminBtns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"edit\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"del\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  renderList() {\n    return this.props.stream.map(streams => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"paperList\",\n          style: {\n            backgroundColor: '#202833',\n            color: 'white'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'center'\n            },\n            children: [streams.title, this.renderAdmin(streams)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"renderList\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"labelHead\",\n        children: \"STREAMS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), this.renderList()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    stream: Object.values(state.stream),\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["D:/STREAMING_SITE/client/src/component/streams/StreamList.js"],"names":["React","connect","fetchStreams","Paper","StreamList","Component","componentDidMount","props","renderAdmin","stream","userId","currentUserId","renderList","map","streams","backgroundColor","color","display","justifyContent","title","render","mapStateToProps","state","Object","values","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACrCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWL,YAAX;AAEH,GAJoC,CAMrC;;;AACAM,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACf,QAAGA,MAAM,CAACC,MAAP,KAAkB,KAAKH,KAAL,CAAWI,aAAhC,EAA8C;AAC1C,0BACI;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA,gCACI;AAAQ,UAAA,EAAE,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,EAAE,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH;AACJ;;AAEDC,EAAAA,UAAU,GAAE;AACR,WAAO,KAAKL,KAAL,CAAWE,MAAX,CAAkBI,GAAlB,CAAsBC,OAAO,IAAG;AACnC,0BACI;AAAA,gCACA,QAAC,KAAD;AAAO,UAAA,SAAS,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,KAAD;AACA,UAAA,SAAS,EAAC,WADV;AAEA,UAAA,KAAK,EAAE;AAACC,YAAAA,eAAe,EAAE,SAAlB;AACPC,YAAAA,KAAK,EAAC;AADC,WAFP;AAAA,iCAKI;AAAK,YAAA,KAAK,EAAE;AAACC,cAAAA,OAAO,EAAE,MAAV;AAAkBC,cAAAA,cAAc,EAAC;AAAjC,aAAZ;AAAA,uBACKJ,OAAO,CAACK,KADb,EAEK,KAAKX,WAAL,CAAiBM,OAAjB,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,gBAFA,eAYA,QAAC,KAAD;AAAO,UAAA,SAAS,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAZA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAgBH,KAjBM,CAAP;AAkBH;;AACDM,EAAAA,MAAM,GAAE;AACJ,wBACA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,KAAKR,UAAL,EAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAMH;;AA7CoC;;AAgDzC,MAAMS,eAAe,GAAEC,KAAD,IAAS;AAC3B,SAAO;AACHb,IAAAA,MAAM,EAAEc,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACb,MAApB,CADL;AAEHE,IAAAA,aAAa,EAAEW,KAAK,CAACG,IAAN,CAAWf;AAFvB,GAAP;AAIH,CALD;;AAMA,eAAeT,OAAO,CAACoB,eAAD,EAAkB;AAACnB,EAAAA;AAAD,CAAlB,CAAP,CAAyCE,UAAzC,CAAf","sourcesContent":["import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {fetchStreams} from '../../actions'\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nclass StreamList extends React.Component {\r\n    componentDidMount(){\r\n        this.props.fetchStreams()\r\n\r\n    }\r\n\r\n    // if user is same then show buttons\r\n    renderAdmin(stream){\r\n        if(stream.userId === this.props.currentUserId){\r\n            return (\r\n                <div id=\"adminBtns\">\r\n                    <button id=\"edit\">Edit</button>\r\n                    <button id=\"del\">Delete</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderList(){\r\n        return this.props.stream.map(streams =>{\r\n            return(\r\n                <div >\r\n                <Paper elevation={0} />\r\n                <Paper \r\n                className=\"paperList\"\r\n                style={{backgroundColor: '#202833', \r\n                color:'white'}}\r\n                >\r\n                    <div style={{display: 'flex' ,justifyContent:'center'}}>\r\n                        {streams.title}\r\n                        {this.renderAdmin(streams)}\r\n                    </div>\r\n                </Paper>\r\n                <Paper elevation={3} />\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n        <div className=\"renderList\">\r\n            <h4 className=\"labelHead\">STREAMS</h4>\r\n            {this.renderList()}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n        stream: Object.values(state.stream),\r\n        currentUserId: state.auth.userId\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {fetchStreams})(StreamList)"]},"metadata":{},"sourceType":"module"}