{"ast":null,"code":"import streams from '../api/streams';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM, SUC_SNACK } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => {\n  return async (dispatch, getState) => {\n    const {\n      userId\n    } = getState().auth;\n    const response = await streams.post('/streams', { ...formValues,\n      userId\n    });\n    dispatch({\n      type: CREATE_STREAM,\n      payload: response.data\n    });\n  };\n};\nexport const fetchStreams = () => {\n  return async dispatch => {\n    const response = await streams.get('/streams');\n    dispatch({\n      type: FETCH_STREAMS,\n      payload: response.data\n    });\n  };\n};\nexport const fetchStream = id => {\n  return async dispatch => {\n    const response = await streams.get(`/streams/${id}`);\n    dispatch({\n      type: FETCH_STREAM,\n      payload: response.data\n    });\n  };\n};\nexport const editStream = (id, formValues) => {\n  return async dispatch => {\n    const response = await streams.put(`/streams/${id}`, formValues);\n    dispatch({\n      type: EDIT_STREAM,\n      payload: response.data\n    });\n  };\n};\nexport const deleteStream = id => {\n  return async dispatch => {\n    await streams.delete(`/delete/${id}`);\n    dispatch({\n      type: DELETE_STREAM,\n      payload: id\n    });\n  };\n};\nexport const sucSnack = task => {\n  return {\n    type: SUC_SNACK,\n    payload: task\n  };\n};","map":{"version":3,"sources":["D:/STREAMING_SITE/client/src/actions/index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","SUC_SNACK","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","response","post","data","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete","sucSnack","task"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;AAGA,SACIC,OADJ,EAEIC,QAFJ,EAGIC,aAHJ,EAIIC,aAJJ,EAKIC,YALJ,EAMIC,aANJ,EAOIC,WAPJ,EAQIC,SARJ,QASO,SATP;AAWA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAW;AAC7B,SAAM;AACFC,IAAAA,IAAI,EAAEV,OADJ;AAEFW,IAAAA,OAAO,EAACF;AAFN,GAAN;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAK;AACxB,SAAM;AACFF,IAAAA,IAAI,EAAET;AADJ,GAAN;AAGH,CAJM;AAMP,OAAO,MAAMY,YAAY,GAAIC,UAAD,IAAe;AACvC,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA6B;AAChC,UAAM;AAACP,MAAAA;AAAD,QAAWO,QAAQ,GAAGC,IAA5B;AACA,UAAMC,QAAQ,GAAG,MAAMnB,OAAO,CAACoB,IAAR,CAAa,UAAb,EAAwB,EAAC,GAAGL,UAAJ;AAAgBL,MAAAA;AAAhB,KAAxB,CAAvB;AACAM,IAAAA,QAAQ,CAAC;AAACL,MAAAA,IAAI,EAAER,aAAP;AAAsBS,MAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,KAAD,CAAR;AAGH,GAND;AAOH,CARM;AAUP,OAAO,MAAMC,YAAY,GAAG,MAAK;AAC7B,SAAO,MAAON,QAAP,IAAmB;AACtB,UAAMG,QAAQ,GAAG,MAAMnB,OAAO,CAACuB,GAAR,CAAY,UAAZ,CAAvB;AACAP,IAAAA,QAAQ,CAAC;AAACL,MAAAA,IAAI,EAACP,aAAN;AAAqBQ,MAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAvC,KAAD,CAAR;AACH,GAHD;AAIH,CALM;AAOP,OAAO,MAAMG,WAAW,GAAIC,EAAD,IAAO;AAC9B,SAAO,MAAMT,QAAN,IAAkB;AACrB,UAAMG,QAAQ,GAAG,MAAMnB,OAAO,CAACuB,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AACAT,IAAAA,QAAQ,CAAC;AAACL,MAAAA,IAAI,EAAEN,YAAP;AAAqBO,MAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAvC,KAAD,CAAR;AACH,GAHD;AAIH,CALM;AAOP,OAAO,MAAMK,UAAU,GAAG,CAACD,EAAD,EAAKV,UAAL,KAAmB;AACzC,SAAO,MAAMC,QAAN,IAAiB;AACpB,UAAMG,QAAQ,GAAG,MAAMnB,OAAO,CAAC2B,GAAR,CAAa,YAAWF,EAAG,EAA3B,EAA8BV,UAA9B,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAACL,MAAAA,IAAI,EAACJ,WAAN;AAAmBK,MAAAA,OAAO,EAACO,QAAQ,CAACE;AAApC,KAAD,CAAR;AACH,GAHD;AAIH,CALM;AAOP,OAAO,MAAMO,YAAY,GAAIH,EAAD,IAAM;AAC9B,SAAO,MAAMT,QAAN,IAAiB;AACpB,UAAMhB,OAAO,CAAC6B,MAAR,CAAgB,WAAUJ,EAAG,EAA7B,CAAN;AACAT,IAAAA,QAAQ,CAAC;AAACL,MAAAA,IAAI,EAAEL,aAAP;AAAsBM,MAAAA,OAAO,EAAEa;AAA/B,KAAD,CAAR;AACH,GAHD;AAIH,CALM;AAOP,OAAO,MAAMK,QAAQ,GAAIC,IAAD,IAAS;AAC7B,SAAM;AACFpB,IAAAA,IAAI,EAAEH,SADJ;AAEFI,IAAAA,OAAO,EAAEmB;AAFP,GAAN;AAIH,CALM","sourcesContent":["import streams from '../api/streams'\r\n\r\n\r\nimport {\r\n    SIGN_IN, \r\n    SIGN_OUT, \r\n    CREATE_STREAM,\r\n    FETCH_STREAMS,\r\n    FETCH_STREAM,\r\n    DELETE_STREAM,\r\n    EDIT_STREAM,\r\n    SUC_SNACK\r\n} from './types'\r\n\r\nexport const signIn = (userId) =>{\r\n    return{\r\n        type: SIGN_IN,\r\n        payload:userId\r\n    }\r\n}\r\n\r\nexport const signOut = () =>{\r\n    return{\r\n        type: SIGN_OUT\r\n    }\r\n}\r\n\r\nexport const createStream = (formValues) =>{\r\n    return async (dispatch, getState) =>{\r\n        const {userId} = getState().auth\r\n        const response = await streams.post('/streams',{...formValues, userId})\r\n        dispatch({type: CREATE_STREAM, payload: response.data})\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const fetchStreams = () =>{\r\n    return async (dispatch) =>{\r\n        const response = await streams.get('/streams')\r\n        dispatch({type:FETCH_STREAMS, payload: response.data})\r\n    }\r\n}\r\n\r\nexport const fetchStream = (id) =>{\r\n    return async(dispatch) =>{\r\n        const response = await streams.get(`/streams/${id}`)\r\n        dispatch({type: FETCH_STREAM, payload: response.data})\r\n    }\r\n}\r\n\r\nexport const editStream = (id, formValues) =>{\r\n    return async(dispatch)=>{\r\n        const response = await streams.put(`/streams/${id}`, formValues)\r\n        dispatch({type:EDIT_STREAM, payload:response.data})\r\n    }\r\n}\r\n\r\nexport const deleteStream = (id)=>{\r\n    return async(dispatch)=>{\r\n        await streams.delete(`/delete/${id}`)\r\n        dispatch({type: DELETE_STREAM, payload: id})\r\n    }\r\n}\r\n\r\nexport const sucSnack = (task) =>{\r\n    return{\r\n        type: SUC_SNACK,\r\n        payload: task\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}