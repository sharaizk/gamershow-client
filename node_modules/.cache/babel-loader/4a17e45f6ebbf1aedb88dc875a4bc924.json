{"ast":null,"code":"import _classCallCheck from \"D:/STREAMING_SITE/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/STREAMING_SITE/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar MediaInfo = /*#__PURE__*/function () {\n  function MediaInfo() {\n    _classCallCheck(this, MediaInfo);\n\n    this.mimeType = null;\n    this.duration = null;\n    this.hasAudio = null;\n    this.hasVideo = null;\n    this.audioCodec = null;\n    this.videoCodec = null;\n    this.audioDataRate = null;\n    this.videoDataRate = null;\n    this.audioSampleRate = null;\n    this.audioChannelCount = null;\n    this.width = null;\n    this.height = null;\n    this.fps = null;\n    this.profile = null;\n    this.level = null;\n    this.refFrames = null;\n    this.chromaFormat = null;\n    this.sarNum = null;\n    this.sarDen = null;\n    this.metadata = null;\n    this.segments = null; // MediaInfo[]\n\n    this.segmentCount = null;\n    this.hasKeyframesIndex = null;\n    this.keyframesIndex = null;\n  }\n\n  _createClass(MediaInfo, [{\n    key: \"isComplete\",\n    value: function isComplete() {\n      var audioInfoComplete = this.hasAudio === false || this.hasAudio === true && this.audioCodec != null && this.audioSampleRate != null && this.audioChannelCount != null;\n      var videoInfoComplete = this.hasVideo === false || this.hasVideo === true && this.videoCodec != null && this.width != null && this.height != null && this.fps != null && this.profile != null && this.level != null && this.refFrames != null && this.chromaFormat != null && this.sarNum != null && this.sarDen != null; // keyframesIndex may not be present\n\n      return this.mimeType != null && this.duration != null && this.metadata != null && this.hasKeyframesIndex != null && audioInfoComplete && videoInfoComplete;\n    }\n  }, {\n    key: \"isSeekable\",\n    value: function isSeekable() {\n      return this.hasKeyframesIndex === true;\n    }\n  }, {\n    key: \"getNearestKeyframe\",\n    value: function getNearestKeyframe(milliseconds) {\n      if (this.keyframesIndex == null) {\n        return null;\n      }\n\n      var table = this.keyframesIndex;\n\n      var keyframeIdx = this._search(table.times, milliseconds);\n\n      return {\n        index: keyframeIdx,\n        milliseconds: table.times[keyframeIdx],\n        fileposition: table.filepositions[keyframeIdx]\n      };\n    }\n  }, {\n    key: \"_search\",\n    value: function _search(list, value) {\n      var idx = 0;\n      var last = list.length - 1;\n      var mid = 0;\n      var lbound = 0;\n      var ubound = last;\n\n      if (value < list[0]) {\n        idx = 0;\n        lbound = ubound + 1; // skip search\n      }\n\n      while (lbound <= ubound) {\n        mid = lbound + Math.floor((ubound - lbound) / 2);\n\n        if (mid === last || value >= list[mid] && value < list[mid + 1]) {\n          idx = mid;\n          break;\n        } else if (list[mid] < value) {\n          lbound = mid + 1;\n        } else {\n          ubound = mid - 1;\n        }\n      }\n\n      return idx;\n    }\n  }]);\n\n  return MediaInfo;\n}();\n\nexport default MediaInfo;","map":{"version":3,"sources":["D:/STREAMING_SITE/client/node_modules/flv.js/src/core/media-info.js"],"names":["MediaInfo","mimeType","duration","hasAudio","hasVideo","audioCodec","videoCodec","audioDataRate","videoDataRate","audioSampleRate","audioChannelCount","width","height","fps","profile","level","refFrames","chromaFormat","sarNum","sarDen","metadata","segments","segmentCount","hasKeyframesIndex","keyframesIndex","audioInfoComplete","videoInfoComplete","milliseconds","table","keyframeIdx","_search","times","index","fileposition","filepositions","list","value","idx","last","length","mid","lbound","ubound","Math","floor"],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass MediaInfo {\n\n    constructor() {\n        this.mimeType = null;\n        this.duration = null;\n\n        this.hasAudio = null;\n        this.hasVideo = null;\n        this.audioCodec = null;\n        this.videoCodec = null;\n        this.audioDataRate = null;\n        this.videoDataRate = null;\n\n        this.audioSampleRate = null;\n        this.audioChannelCount = null;\n\n        this.width = null;\n        this.height = null;\n        this.fps = null;\n        this.profile = null;\n        this.level = null;\n        this.refFrames = null;\n        this.chromaFormat = null;\n        this.sarNum = null;\n        this.sarDen = null;\n\n        this.metadata = null;\n        this.segments = null;  // MediaInfo[]\n        this.segmentCount = null;\n        this.hasKeyframesIndex = null;\n        this.keyframesIndex = null;\n    }\n\n    isComplete() {\n        let audioInfoComplete = (this.hasAudio === false) ||\n                                (this.hasAudio === true &&\n                                 this.audioCodec != null &&\n                                 this.audioSampleRate != null &&\n                                 this.audioChannelCount != null);\n\n        let videoInfoComplete = (this.hasVideo === false) ||\n                                (this.hasVideo === true &&\n                                 this.videoCodec != null &&\n                                 this.width != null &&\n                                 this.height != null &&\n                                 this.fps != null &&\n                                 this.profile != null &&\n                                 this.level != null &&\n                                 this.refFrames != null &&\n                                 this.chromaFormat != null &&\n                                 this.sarNum != null &&\n                                 this.sarDen != null);\n\n        // keyframesIndex may not be present\n        return this.mimeType != null &&\n               this.duration != null &&\n               this.metadata != null &&\n               this.hasKeyframesIndex != null &&\n               audioInfoComplete &&\n               videoInfoComplete;\n    }\n\n    isSeekable() {\n        return this.hasKeyframesIndex === true;\n    }\n\n    getNearestKeyframe(milliseconds) {\n        if (this.keyframesIndex == null) {\n            return null;\n        }\n\n        let table = this.keyframesIndex;\n        let keyframeIdx = this._search(table.times, milliseconds);\n\n        return {\n            index: keyframeIdx,\n            milliseconds: table.times[keyframeIdx],\n            fileposition: table.filepositions[keyframeIdx]\n        };\n    }\n\n    _search(list, value) {\n        let idx = 0;\n\n        let last = list.length - 1;\n        let mid = 0;\n        let lbound = 0;\n        let ubound = last;\n\n        if (value < list[0]) {\n            idx = 0;\n            lbound = ubound + 1;  // skip search\n        }\n\n        while (lbound <= ubound) {\n            mid = lbound + Math.floor((ubound - lbound) / 2);\n            if (mid === last || (value >= list[mid] && value < list[mid + 1])) {\n                idx = mid;\n                break;\n            } else if (list[mid] < value) {\n                lbound = mid + 1;\n            } else {\n                ubound = mid - 1;\n            }\n        }\n\n        return idx;\n    }\n\n}\n\nexport default MediaInfo;"]},"metadata":{},"sourceType":"module"}