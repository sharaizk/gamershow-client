{"ast":null,"code":"import _classCallCheck from \"D:/STREAMING_SITE/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/STREAMING_SITE/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport EventEmitter from 'events';\nimport Log from './logger.js';\n\nvar LoggingControl = /*#__PURE__*/function () {\n  function LoggingControl() {\n    _classCallCheck(this, LoggingControl);\n  }\n\n  _createClass(LoggingControl, null, [{\n    key: \"forceGlobalTag\",\n    get: function get() {\n      return Log.FORCE_GLOBAL_TAG;\n    },\n    set: function set(enable) {\n      Log.FORCE_GLOBAL_TAG = enable;\n\n      LoggingControl._notifyChange();\n    }\n  }, {\n    key: \"globalTag\",\n    get: function get() {\n      return Log.GLOBAL_TAG;\n    },\n    set: function set(tag) {\n      Log.GLOBAL_TAG = tag;\n\n      LoggingControl._notifyChange();\n    }\n  }, {\n    key: \"enableAll\",\n    get: function get() {\n      return Log.ENABLE_VERBOSE && Log.ENABLE_DEBUG && Log.ENABLE_INFO && Log.ENABLE_WARN && Log.ENABLE_ERROR;\n    },\n    set: function set(enable) {\n      Log.ENABLE_VERBOSE = enable;\n      Log.ENABLE_DEBUG = enable;\n      Log.ENABLE_INFO = enable;\n      Log.ENABLE_WARN = enable;\n      Log.ENABLE_ERROR = enable;\n\n      LoggingControl._notifyChange();\n    }\n  }, {\n    key: \"enableDebug\",\n    get: function get() {\n      return Log.ENABLE_DEBUG;\n    },\n    set: function set(enable) {\n      Log.ENABLE_DEBUG = enable;\n\n      LoggingControl._notifyChange();\n    }\n  }, {\n    key: \"enableVerbose\",\n    get: function get() {\n      return Log.ENABLE_VERBOSE;\n    },\n    set: function set(enable) {\n      Log.ENABLE_VERBOSE = enable;\n\n      LoggingControl._notifyChange();\n    }\n  }, {\n    key: \"enableInfo\",\n    get: function get() {\n      return Log.ENABLE_INFO;\n    },\n    set: function set(enable) {\n      Log.ENABLE_INFO = enable;\n\n      LoggingControl._notifyChange();\n    }\n  }, {\n    key: \"enableWarn\",\n    get: function get() {\n      return Log.ENABLE_WARN;\n    },\n    set: function set(enable) {\n      Log.ENABLE_WARN = enable;\n\n      LoggingControl._notifyChange();\n    }\n  }, {\n    key: \"enableError\",\n    get: function get() {\n      return Log.ENABLE_ERROR;\n    },\n    set: function set(enable) {\n      Log.ENABLE_ERROR = enable;\n\n      LoggingControl._notifyChange();\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {\n        globalTag: Log.GLOBAL_TAG,\n        forceGlobalTag: Log.FORCE_GLOBAL_TAG,\n        enableVerbose: Log.ENABLE_VERBOSE,\n        enableDebug: Log.ENABLE_DEBUG,\n        enableInfo: Log.ENABLE_INFO,\n        enableWarn: Log.ENABLE_WARN,\n        enableError: Log.ENABLE_ERROR,\n        enableCallback: Log.ENABLE_CALLBACK\n      };\n    }\n  }, {\n    key: \"applyConfig\",\n    value: function applyConfig(config) {\n      Log.GLOBAL_TAG = config.globalTag;\n      Log.FORCE_GLOBAL_TAG = config.forceGlobalTag;\n      Log.ENABLE_VERBOSE = config.enableVerbose;\n      Log.ENABLE_DEBUG = config.enableDebug;\n      Log.ENABLE_INFO = config.enableInfo;\n      Log.ENABLE_WARN = config.enableWarn;\n      Log.ENABLE_ERROR = config.enableError;\n      Log.ENABLE_CALLBACK = config.enableCallback;\n    }\n  }, {\n    key: \"_notifyChange\",\n    value: function _notifyChange() {\n      var emitter = LoggingControl.emitter;\n\n      if (emitter.listenerCount('change') > 0) {\n        var config = LoggingControl.getConfig();\n        emitter.emit('change', config);\n      }\n    }\n  }, {\n    key: \"registerListener\",\n    value: function registerListener(listener) {\n      LoggingControl.emitter.addListener('change', listener);\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(listener) {\n      LoggingControl.emitter.removeListener('change', listener);\n    }\n  }, {\n    key: \"addLogListener\",\n    value: function addLogListener(listener) {\n      Log.emitter.addListener('log', listener);\n\n      if (Log.emitter.listenerCount('log') > 0) {\n        Log.ENABLE_CALLBACK = true;\n\n        LoggingControl._notifyChange();\n      }\n    }\n  }, {\n    key: \"removeLogListener\",\n    value: function removeLogListener(listener) {\n      Log.emitter.removeListener('log', listener);\n\n      if (Log.emitter.listenerCount('log') === 0) {\n        Log.ENABLE_CALLBACK = false;\n\n        LoggingControl._notifyChange();\n      }\n    }\n  }]);\n\n  return LoggingControl;\n}();\n\nLoggingControl.emitter = new EventEmitter();\nexport default LoggingControl;","map":{"version":3,"sources":["D:/STREAMING_SITE/client/node_modules/flv.js/src/utils/logging-control.js"],"names":["EventEmitter","Log","LoggingControl","FORCE_GLOBAL_TAG","enable","_notifyChange","GLOBAL_TAG","tag","ENABLE_VERBOSE","ENABLE_DEBUG","ENABLE_INFO","ENABLE_WARN","ENABLE_ERROR","globalTag","forceGlobalTag","enableVerbose","enableDebug","enableInfo","enableWarn","enableError","enableCallback","ENABLE_CALLBACK","config","emitter","listenerCount","getConfig","emit","listener","addListener","removeListener"],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from 'events';\nimport Log from './logger.js';\n\nclass LoggingControl {\n\n    static get forceGlobalTag() {\n        return Log.FORCE_GLOBAL_TAG;\n    }\n\n    static set forceGlobalTag(enable) {\n        Log.FORCE_GLOBAL_TAG = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static get globalTag() {\n        return Log.GLOBAL_TAG;\n    }\n\n    static set globalTag(tag) {\n        Log.GLOBAL_TAG = tag;\n        LoggingControl._notifyChange();\n    }\n\n    static get enableAll() {\n        return Log.ENABLE_VERBOSE\n            && Log.ENABLE_DEBUG\n            && Log.ENABLE_INFO\n            && Log.ENABLE_WARN\n            && Log.ENABLE_ERROR;\n    }\n\n    static set enableAll(enable) {\n        Log.ENABLE_VERBOSE = enable;\n        Log.ENABLE_DEBUG = enable;\n        Log.ENABLE_INFO = enable;\n        Log.ENABLE_WARN = enable;\n        Log.ENABLE_ERROR = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static get enableDebug() {\n        return Log.ENABLE_DEBUG;\n    }\n\n    static set enableDebug(enable) {\n        Log.ENABLE_DEBUG = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static get enableVerbose() {\n        return Log.ENABLE_VERBOSE;\n    }\n\n    static set enableVerbose(enable) {\n        Log.ENABLE_VERBOSE = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static get enableInfo() {\n        return Log.ENABLE_INFO;\n    }\n\n    static set enableInfo(enable) {\n        Log.ENABLE_INFO = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static get enableWarn() {\n        return Log.ENABLE_WARN;\n    }\n\n    static set enableWarn(enable) {\n        Log.ENABLE_WARN = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static get enableError() {\n        return Log.ENABLE_ERROR;\n    }\n\n    static set enableError(enable) {\n        Log.ENABLE_ERROR = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static getConfig() {\n        return {\n            globalTag: Log.GLOBAL_TAG,\n            forceGlobalTag: Log.FORCE_GLOBAL_TAG,\n            enableVerbose: Log.ENABLE_VERBOSE,\n            enableDebug: Log.ENABLE_DEBUG,\n            enableInfo: Log.ENABLE_INFO,\n            enableWarn: Log.ENABLE_WARN,\n            enableError: Log.ENABLE_ERROR,\n            enableCallback: Log.ENABLE_CALLBACK\n        };\n    }\n\n    static applyConfig(config) {\n        Log.GLOBAL_TAG = config.globalTag;\n        Log.FORCE_GLOBAL_TAG = config.forceGlobalTag;\n        Log.ENABLE_VERBOSE = config.enableVerbose;\n        Log.ENABLE_DEBUG = config.enableDebug;\n        Log.ENABLE_INFO = config.enableInfo;\n        Log.ENABLE_WARN = config.enableWarn;\n        Log.ENABLE_ERROR = config.enableError;\n        Log.ENABLE_CALLBACK = config.enableCallback;\n    }\n\n    static _notifyChange() {\n        let emitter = LoggingControl.emitter;\n\n        if (emitter.listenerCount('change') > 0) {\n            let config = LoggingControl.getConfig();\n            emitter.emit('change', config);\n        }\n    }\n\n    static registerListener(listener) {\n        LoggingControl.emitter.addListener('change', listener);\n    }\n\n    static removeListener(listener) {\n        LoggingControl.emitter.removeListener('change', listener);\n    }\n\n    static addLogListener(listener) {\n        Log.emitter.addListener('log', listener);\n        if (Log.emitter.listenerCount('log') > 0) {\n            Log.ENABLE_CALLBACK = true;\n            LoggingControl._notifyChange();\n        }\n    }\n\n    static removeLogListener(listener) {\n        Log.emitter.removeListener('log', listener);\n        if (Log.emitter.listenerCount('log') === 0) {\n            Log.ENABLE_CALLBACK = false;\n            LoggingControl._notifyChange();\n        }\n    }\n\n}\n\nLoggingControl.emitter = new EventEmitter();\n\nexport default LoggingControl;"]},"metadata":{},"sourceType":"module"}