{"ast":null,"code":"export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n\n    if (serializedState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (err) {}\n};\nexport const deleteState = state => {\n  try {\n    localStorage.clear();\n  } catch (e) {}\n};","map":{"version":3,"sources":["D:/STREAMING_SITE/client/src/localStorage.js"],"names":["loadState","serializedState","localStorage","getItem","undefined","JSON","parse","err","saveState","state","stringify","setItem","deleteState","clear","e"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,MAAI;AACzB,MAAG;AACC,UAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;;AACA,QAAGF,eAAe,KAAK,IAAvB,EAA4B;AACxB,aAAOG,SAAP;AACH;;AACD,WAAOC,IAAI,CAACC,KAAL,CAAWL,eAAX,CAAP;AACH,GAND,CAOA,OAAMM,GAAN,EAAU;AACN,WAAOH,SAAP;AACH;AACJ,CAXM;AAaP,OAAO,MAAMI,SAAS,GAAIC,KAAD,IAAU;AAC/B,MAAG;AACC,UAAMR,eAAe,GAAGI,IAAI,CAACK,SAAL,CAAeD,KAAf,CAAxB;AACAP,IAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA6BV,eAA7B;AAEH,GAJD,CAIC,OAAMM,GAAN,EAAU,CAEV;AACJ,CARM;AAUP,OAAO,MAAMK,WAAW,GAAIH,KAAD,IAAS;AAChC,MAAG;AACCP,IAAAA,YAAY,CAACW,KAAb;AACH,GAFD,CAGA,OAAMC,CAAN,EAAQ,CAEP;AACJ,CAPM","sourcesContent":["export const loadState = ()=>{\r\n    try{\r\n        const serializedState = localStorage.getItem('state')\r\n        if(serializedState === null){\r\n            return undefined\r\n        }\r\n        return JSON.parse(serializedState)\r\n    }\r\n    catch(err){\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const saveState = (state) =>{\r\n    try{\r\n        const serializedState = JSON.stringify(state)\r\n        localStorage.setItem('state',serializedState)\r\n\r\n    }catch(err){\r\n\r\n    }\r\n}\r\n\r\nexport const deleteState = (state)=>{\r\n    try{\r\n        localStorage.clear()\r\n    }\r\n    catch(e){\r\n        \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}