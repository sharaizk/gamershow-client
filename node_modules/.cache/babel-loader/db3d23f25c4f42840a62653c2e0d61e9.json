{"ast":null,"code":"import _classCallCheck from\"D:/STREAMING_SITE/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/STREAMING_SITE/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/STREAMING_SITE/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/STREAMING_SITE/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{fetchStream}from'../../actions';import{chkToken}from'../../actions';import flv from'flv.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var StreamShow=/*#__PURE__*/function(_React$Component){_inherits(StreamShow,_React$Component);var _super=_createSuper(StreamShow);function StreamShow(props){var _this;_classCallCheck(this,StreamShow);_this=_super.call(this,props);_this.videoRef=/*#__PURE__*/React.createRef();return _this;}_createClass(StreamShow,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.fetchStream(this.props.match.params.id);this.buildPlayer();this.props.chkToken();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.buildPlayer();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.player.destroy();}},{key:\"buildPlayer\",value:function buildPlayer(){if(this.player||!this.props.stream){return;}else{this.player=flv.createPlayer({type:'flv',url:\"http://192.168.1.8:8000/live/\".concat(this.props.match.params.id,\".flv\")});this.player.attachMediaElement(this.videoRef.current);this.player.load();}}},{key:\"renderInstruction\",value:function renderInstruction(stream){if(stream.userId===this.props.currentUserId){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"ol\",{className:\"instructions\",children:[\"How to Setup the Stream:\",/*#__PURE__*/_jsx(\"li\",{children:\"Open you Brodacasting Software (i.e: OBS/StreamLabs Obs)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Go to settings\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Type in the link: rtmp://localhost/live\"}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Use the Server Key: \",this.props.match.params.id]}),/*#__PURE__*/_jsx(\"li\",{children:\"Apply and start the Stream\"})]})});}}},{key:\"render\",value:function render(){if(!this.props.stream){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading\"});}var _this$props$stream=this.props.stream,title=_this$props$stream.title,description=_this$props$stream.description;return/*#__PURE__*/_jsxs(\"div\",{className:\"ui container cont\",children:[/*#__PURE__*/_jsx(\"video\",{ref:this.videoRef,controls:true,className:\"videoPlayer\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"streamHeader\",children:title}),/*#__PURE__*/_jsx(\"h3\",{className:\"streaDesc\",children:description}),this.renderInstruction(this.props.stream)]});}}]);return StreamShow;}(React.Component);var mapStateToProps=function mapStateToProps(state,ownProps){return{stream:state.stream[ownProps.match.params.id],currentUserId:state.pauth.userId};};export default connect(mapStateToProps,{fetchStream:fetchStream,chkToken:chkToken})(StreamShow);","map":{"version":3,"sources":["D:/STREAMING_SITE/client/src/component/streams/StreamShow.js"],"names":["React","connect","fetchStream","chkToken","flv","StreamShow","props","videoRef","createRef","match","params","id","buildPlayer","player","destroy","stream","createPlayer","type","url","attachMediaElement","current","load","userId","currentUserId","title","description","renderInstruction","Component","mapStateToProps","state","ownProps","pauth"],"mappings":"4iBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,WAAR,KAA0B,eAA1B,CACA,OAAQC,QAAR,KAAuB,eAAvB,CACA,MAAOC,CAAAA,GAAP,KAAgB,QAAhB,C,gJAEMC,CAAAA,U,oHAEF,oBAAYC,KAAZ,CAAkB,4CACd,uBAAMA,KAAN,EACA,MAAKC,QAAL,cAAgBP,KAAK,CAACQ,SAAN,EAAhB,CAFc,aAGjB,C,wDAED,4BAAmB,CACf,KAAKF,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C,EACA,KAAKC,WAAL,GACA,KAAKN,KAAL,CAAWH,QAAX,GACH,C,kCAED,6BAAoB,CAChB,KAAKS,WAAL,GACH,C,oCAED,+BAAsB,CAClB,KAAKC,MAAL,CAAYC,OAAZ,GACH,C,2BACD,sBAAa,CACT,GAAI,KAAKD,MAAL,EAAe,CAAC,KAAKP,KAAL,CAAWS,MAA/B,CAAsC,CAClC,OACH,CAFD,IAII,CACA,KAAKF,MAAL,CAAYT,GAAG,CAACY,YAAJ,CAAiB,CACzBC,IAAI,CAAC,KADoB,CAEzBC,GAAG,wCAAkC,KAAKZ,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAA1D,QAFsB,CAAjB,CAAZ,CAIA,KAAKE,MAAL,CAAYM,kBAAZ,CAA+B,KAAKZ,QAAL,CAAca,OAA7C,EACA,KAAKP,MAAL,CAAYQ,IAAZ,GACH,CACJ,C,iCACD,2BAAkBN,MAAlB,CAAyB,CACrB,GAAGA,MAAM,CAACO,MAAP,GAAkB,KAAKhB,KAAL,CAAWiB,aAAhC,CAA8C,CAC1C,mBACI,sCACI,YAAI,SAAS,CAAC,cAAd,mDACI,gFADJ,cAEI,sCAFJ,cAGI,+DAHJ,cAII,6CAAyB,KAAKjB,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAAjD,GAJJ,cAKI,kDALJ,GADJ,EADJ,CAWH,CACJ,C,sBACD,iBAAQ,CACJ,GAAG,CAAC,KAAKL,KAAL,CAAWS,MAAf,CAAsB,CAClB,mBAAO,gCAAP,CACH,CAED,uBAA4B,KAAKT,KAAL,CAAWS,MAAvC,CAAOS,KAAP,oBAAOA,KAAP,CAAaC,WAAb,oBAAaA,WAAb,CAEA,mBAEI,aAAK,SAAS,CAAC,mBAAf,wBACI,cAAO,GAAG,CAAE,KAAKlB,QAAjB,CAA2B,QAAQ,KAAnC,CAAoC,SAAS,CAAC,aAA9C,EADJ,cAEI,WAAI,SAAS,CAAC,cAAd,UAA8BiB,KAA9B,EAFJ,cAGI,WAAI,SAAS,CAAC,WAAd,UAA2BC,WAA3B,EAHJ,CAIK,KAAKC,iBAAL,CAAuB,KAAKpB,KAAL,CAAWS,MAAlC,CAJL,GAFJ,CASH,C,wBAjEoBf,KAAK,CAAC2B,S,EAoE/B,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAOC,QAAP,CAAmB,CACvC,MAAM,CACFf,MAAM,CAAEc,KAAK,CAACd,MAAN,CAAae,QAAQ,CAACrB,KAAT,CAAeC,MAAf,CAAsBC,EAAnC,CADN,CAEFY,aAAa,CAAEM,KAAK,CAACE,KAAN,CAAYT,MAFzB,CAAN,CAIH,CALD,CAOA,cAAerB,CAAAA,OAAO,CAAC2B,eAAD,CAAkB,CAAC1B,WAAW,CAAXA,WAAD,CAAaC,QAAQ,CAARA,QAAb,CAAlB,CAAP,CAAiDE,UAAjD,CAAf","sourcesContent":["import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {fetchStream} from '../../actions'\r\nimport {chkToken} from '../../actions'\r\nimport flv from 'flv.js'\r\n\r\nclass StreamShow extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.videoRef = React.createRef()\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.fetchStream(this.props.match.params.id)\r\n        this.buildPlayer()\r\n        this.props.chkToken()\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.buildPlayer()\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.player.destroy()\r\n    }\r\n    buildPlayer(){\r\n        if (this.player || !this.props.stream){\r\n            return\r\n        }\r\n\r\n        else{\r\n            this.player=flv.createPlayer({\r\n                type:'flv',\r\n                url: `http://192.168.1.8:8000/live/${this.props.match.params.id}.flv`\r\n            })\r\n            this.player.attachMediaElement(this.videoRef.current)\r\n            this.player.load()\r\n        }\r\n    }\r\n    renderInstruction(stream){\r\n        if(stream.userId === this.props.currentUserId){\r\n            return (\r\n                <>\r\n                    <ol className=\"instructions\">How to Setup the Stream:\r\n                        <li>Open you Brodacasting Software (i.e: OBS/StreamLabs Obs)</li>\r\n                        <li>Go to settings</li>\r\n                        <li>Type in the link: rtmp://localhost/live</li>\r\n                        <li>Use the Server Key: {this.props.match.params.id}</li>\r\n                        <li>Apply and start the Stream</li>\r\n                    </ol>   \r\n                </>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        if(!this.props.stream){\r\n            return <div>Loading</div>\r\n        }\r\n\r\n        const {title,description} = this.props.stream\r\n\r\n        return(\r\n        \r\n            <div className=\"ui container cont\">\r\n                <video ref={this.videoRef} controls className=\"videoPlayer\"/>\r\n                <h1 className=\"streamHeader\">{title}</h1>\r\n                <h3 className=\"streaDesc\">{description}</h3> \r\n                {this.renderInstruction(this.props.stream)} \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) =>{\r\n    return{\r\n        stream: state.stream[ownProps.match.params.id],\r\n        currentUserId: state.pauth.userId,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchStream,chkToken})(StreamShow)"]},"metadata":{},"sourceType":"module"}